// static_cast（静态转换）
// 用于转换非多态类型，如基础类型、指针、引用，基类转子类，子类转基类（可能出问题，因为子类可能有父类没有的字段和方法）  
// 转换在编译时进行，不会进行运行时类型检查

// dynamic_cast（动态类型转换）
// 用于具有继承关系的基类和派生类之间的转换，并且只能用于多态类型转换  
// dynamic_cast用于在运行时进行类型检查，并且在转换失败时返回空指针(对于指针类型)或抛出异常std::bad_cast异常(对于引用类型)

// const_cast
// 用于将 const 或 volatile 对象转换为非 const 或非 volatile 对象，以便修改对象的值。

// reinterpret_cast
// 重新解释转换用于将一个指针或引用转换为完全不相关的类型
// 它会重新解释底层的二进制表示，将一个类型的位模式解释为另一个类型的位模式
// 重新解释转换可以将指针类型转换为整数类型，或者将整数类型转换为指针类型，但是可能会导致未定义行为

